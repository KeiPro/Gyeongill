
/*
	연산자
	데이터를 가공(연산)하는 모든 명령에 필요한 것들
	1) 어떤 종류의 연산자들이 있는지?
	2) 연산자들간의 우선순위 : 어떤 순서로 연산이 되는지?
	3) 결합순위 : 좌측부터 연산하는 연산자, 우측부터 연산하는 연산자

	01. 사칙 연산자 : 산술연산자 (좌측부터 연산)
	+ : 더하기
	- : 빼기
	* : 곱하기
	/ : 나누기	11 / 3 == 3 (몫)
	% : 나머지	11 % 3 == 2 (나머지)
	(* == / == %) > (+ == -)

	02. 대입연산자 (우측부터 연산)
	= : 왼쪽 항에 오른쪽 항의 값을 넣어준다(대입한다).

	03. 복합대입연산자
	+= : a += b;	 =>		 a = a + b;
	-= : a -= b;	 =>		 a = a - b;
	*= : a *= b;	 =>		 a = a * b;
	/= : a /= b;	 =>		 a = a / b;
	%= : a %= b;	 =>		 a = a % b;

	변수에 (-)연산자를 붙여서 양, 음수를 바꿀 수 있다.
	int testNum = 10;
	testNum = -testNum; //-10
	testNum -= testNum;	// 0

	간단 실습1 : 임의의 두 정수를 초기화해서 선언하고 복합대입연산자를 활용해서
				두 정수의 나머지값을 출력하세요.

	간단 실습2 : -- 증감연산자를 활용해서 방금전 예제를 복습해보자.

	04. 증감연산자
	특정 변수의 값을 1씩 증가시키거나 감소시킬 때 쓴다.
	변수의 앞이나 뒤에 ++ / -- 를 붙여서 사용한다.

	int i = 10;
	i++		(후위 연산자)
	++i		(전위 연산자)
	i--		(후위 연산자)
	--i		(전위 연산자)

	05. 관계연산자
	두 값을 비교한 결과가 참(1, true)인지 거짓(0, false)인지를 반환하는 연산자

	5 < 3 : 0 (false)
	3 + 2 > 4 : 1 (true)

	< :
	> :
	== : 왼쪽 값과 오른쪽 값이 같으면 1(true)을 반환 다르면 0을 반환
	!= : 왼쪽 값과 오른쪽 값이 같으면 0(false)을 반환 다르면 1을 반환
	<= : 왼쪽 값이 오른쪽 값보다 작거나 같으면 1(true)을 반환
	>= : 왼쪽 값이 오른쪽 값보다 크거나 같으면 1(true)을 반환

	실습 : 200331_이름약자.cpp 프로젝트 새로 작성

	고객의 나이를 입력받아서
	미성년자이면(19살 이하) false, 성년이면 true를 출력

	고객의 나이를 입력하세요 : 20
	성년인가요? : true, false
	주민등록증 발급 대상인가요? : true // <-- 딱 20살일때만
	아홉수 인가요? : false

*/