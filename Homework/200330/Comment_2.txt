	/*
		코딩을 할 때 우선 생각해야 할 것
		1) 데이터 타입 : 메모리를 어떻게 사용할 것인가?
		2) 연산자 : 1)번의 데이터들을 어떻게 계산할 것인가?
		3) 제어 구조 : 어떤 목적을 가진 실행문들을 만들것인가?
	*/
	//int num = 10;
	//// 이름 : num / 값 : 10 / 크기 : 4 / 메모리 주소 : ?
	//long long num2 = 356342000000000;
	//long long num3 = 456456;
	//long long num4 = 456456;

	//cout << &num2 << endl;
	//cout << &num3 << endl;
	//cout << &num4 << endl;

	/*
	상수

		메모리 공간에 저장되어 있지만 변경이 불가능한 데이터를 상수라고 부른다.
		
		어떤 상수는 변수와 같이 이름을 붙일 수도 있다.
		상수를 지정할 때는 const라는 키워드를 사용한다.
	*/

	//cout << 100 << endl;
	//const int A = 500;
	//cout << A << endl;

	/*
		변수의 이름을 짓는 이유 : 코드의 가독성을 높이기 위한 방법
		1) 들여쓰기를 정확하게 활용하자.
		2) 변수의 선언과 초기화는 최대한 코드 묶음의 맨 앞에 모아놓자.
		3) 변수, 함수 네이밍 규칙을 통일하자.
		- 헝가리안 표기법
			변수명 앞에 변수 타입을 표기하는 약어를 붙인다.
			int nPlayerCount;
			float fMyWeight;
			요즘은 잘 사용되지 않는다.
		- 카멜 표기법
			a) 가급적 두 단어 이상으로 구성한다.
			첫번째 단어는 소문자로 두 번째 단어는 대문자로 시작한다.
			int playerCount;
			float myWeight;
			bool isAlive;
			bool 변수는 동사+명사, 동사+형용사, 형용사+명사 형태로 구성한다.
			isAlive, hasHair, isPretty, eatMeal

			b) 상수는 무조건 대문자로 가능하면 두 단어 이상으로 구성
			const int MAX_HP = 100;
			const double MAX_SPEED = 5.3;
			
			c ) 함수, 구조체, 클래스 등은 첫 단어의 첫 글자를 대문자로 표기한다.
			int GetTime(); //시간을 얻어오는 함수.
	*/
	